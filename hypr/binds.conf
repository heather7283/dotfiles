# Key binds config

# bind = , Super_L, submap, super_binds
#
# submap = super_binds
#
# bindr = , Super_L, submap, reset
#
# bind = SUPER, Y, execr, notify-send "Y pressed"
#
# bind = , catchall, execr, notify-send catchall
#
# submap = reset

# Launch applications
bind = SUPER, T, execr, if pgrep --exact "tmux: server"; then exec foot --app-id foot-tmux --term foot-extra tmux attach; else exec foot --app-id foot-tmux --term foot-extra tmux; fi
bind = SUPER SHIFT, T, execr, foot --app-id foot-tmux tmux new-session
#bind = SUPER, W, execr, firefox

bind = SUPER, A, execr, foot-popup pipemixer
bind = SUPER, R, execr, foot-popup ~/.config/scripts/drun-fzf/drun-fzf.sh
bind = SUPER, C, execr, foot-popup ~/.config/scripts/cclip-fzf/picker.sh
bind = SUPER, B, execr, foot-popup ~/.config/scripts/firefox-history-fzf/firefox-history-fzf.sh
bind = SUPER, D, execr, foot-popup ~/.config/scripts/action-menu/action-menu.sh

# Window management
bind = SUPER, Q, execr, ~/.config/scripts/hyprland-kill-active-window.sh
bind = SUPER SHIFT, Q, execr, kill -9 "$(hyprctl -j activewindow | jq '.pid')"
#bind = SUPER, Q, killactive
bind = SUPER, O, togglefloating,
bind = SUPER, P, pin,
bind = SUPER, F, fullscreen,1 # maximize (keep panel)
bind = SUPER SHIFT, F, fullscreen,0 # actual fullscreen

# zoom
binds {
    scroll_event_delay = 0
}
bind = SUPER, mouse_down, execr, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk '/float/ {print $2 * 1.5}')" # zoom in
bind = SUPER, mouse_up, execr, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk '/float/ {print $2 <= 1 ? 1 : $2 / 1.5}')" # zoom out
bind = SUPER, mouse:274, execr, hyprctl keyword cursor:zoom_factor 1 # wheel press

bind = SUPER, S, execr, grim - | tee ~/pictures/sshots/"$(date --iso-8601=ns)".png | wl-copy -t "image/png"
bind = SUPER SHIFT, S, execr, frzscr -c sh -c 'grim -g "$(slurp -d)" -' | tee ~/pictures/sshots/"$(date --iso-8601=ns)".png | wl-copy -t "image/png"
bind = SUPER CTRL, S, execr, frzscr -c sh -c 'grim -g "$(slurp -d)" -' | swappy -f - -o - | wl-copy -t "image/png"
bind = SUPER, U, execr, hyprpicker -a -f hex

# Cycle through open windows
bind = SUPER, N, cyclenext

# Scroll through existing workspaces
bind = SUPER, K, workspace, r+1
bind = SUPER, J, workspace, r-1
bind = SUPER, mouse:276, workspace, r+1
bind = SUPER, mouse:275, workspace, r-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

# Switch workspaces with mainMod + [9-0]
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [9-0]
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
bind = SUPER SHIFT, 0, movetoworkspace, 10

# Audio control with pactl
binde = , XF86AudioRaiseVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ +5%
binde = , XF86AudioLowerVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ -5%
bind = , XF86AudioMute, execr, pactl set-sink-mute @DEFAULT_SINK@ toggle
bind = , XF86AudioMicMute, execr, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindr = , VoidSymbol, execr, pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Backlight control
binde = , XF86MonBrightnessDown, execr, awk '{print $1 - 10 > FILENAME}' /sys/class/backlight/amdgpu_bl*/brightness
binde = , XF86MonBrightnessUp, execr, awk '{print $1 + 10 > FILENAME}' /sys/class/backlight/amdgpu_bl*/brightness

# Turn display off
# (XF86ScreenSaver doesn't work for some reason so we use the keycode)
bind = , code:160, execr, sleep 0.5 && hyprctl dispatch dpms off

# Bind F10 key to toggle player play/pause
bind = , XF86TouchpadToggle, execr, playerctl play-pause

bind = SUPER, KP_Multiply, execr, pkill -USR1 gpu-scree

bind = SUPER, P, exec, kill -STOP "$(hyprctl activewindow | awk '/pid/ {print $2}')"
bind = SUPER SHIFT, P, exec, kill -CONT "$(hyprctl activewindow | awk '/pid/ {print $2}')"

$KBD_COLOR_DEFAULT=255, 255, 255
$KBD_COLOR_CURSOR=255, 0, 255
$KBD_COLOR_VI=0, 0, 255

# ========== mouse emulation submap ==========
submap = cursor

# Jump cursor to a position
bind= , g, exec, hyprctl dispatch submap reset && wl-kbptr && hyprctl dispatch submap cursor

# Cursor movement
binde = , j, execr, wlrctl pointer move 0 20
binde = , k, execr, wlrctl pointer move 0 -20
binde = , l, execr, wlrctl pointer move 20 0
binde = , h, execr, wlrctl pointer move -20 0
binde = SHIFT, j, execr, wlrctl pointer move 0 10
binde = SHIFT, k, execr, wlrctl pointer move 0 -10
binde = SHIFT, l, execr, wlrctl pointer move 10 0
binde = SHIFT, h, execr, wlrctl pointer move -10 0

# Left button
bind = , s, execr, wlrctl pointer click right
# Middle button
bind = , d, execr, wlrctl pointer click middle
# Right button
bind = , f, execr, wlrctl pointer click left

# Scroll up and down
binde = , e, execr, wlrctl pointer scroll 10 0
binde = , r, execr, wlrctl pointer scroll -10 0
# Scroll left and right
binde = , t, execr, wlrctl pointer scroll 0 -10
binde = , g, execr, wlrctl pointer scroll 0 10

bindi = , catchall, execr,  # noop

bind =  , escape, execr, hyprctl dispatch submap reset && ~/.config/scripts/kbd-backlight-set.sh $KBD_COLOR_DEFAULT

submap = reset

bind = SUPER, g, execr, hyprctl dispatch submap cursor && ~/.config/scripts/kbd-backlight-set.sh $KBD_COLOR_CURSOR
# ========== mouse emulation submap ==========

# ========== vi keybinds emulation submap ==========
submap = vi

bind = , h, sendshortcut, , Left,
bind = , j, sendshortcut, , Down,
bind = , k, sendshortcut, , Up,
bind = , l, sendshortcut, , Right,

bind = , e, sendshortcut, CTRL, Right,
bind = , b, sendshortcut, CTRL, Left,

bind = CTRL, b, sendshortcut, , KP_9, # PageUp
bind = CTRL, f, sendshortcut, , KP_3, # PageDown

binde = , x, execr, hyprctl --batch "dispatch sendshortcut , Right, ; dispatch sendshortcut , BackSpace,"

bind =  , escape, execr, hyprctl dispatch submap reset && ~/.config/scripts/kbd-backlight-set.sh $KBD_COLOR_DEFAULT

bindi = , catchall, execr,  # noop

submap = reset

bind = SUPER, v, execr, hyprctl dispatch submap vi && ~/.config/scripts/kbd-backlight-set.sh $KBD_COLOR_VI
# ========== vi keybinds emulation submap ==========

#bindn = , f, exec, sleep 0.2; pkill -USR2 gpu-scree
#bindn = , g, exec, sleep 0.2; pkill -USR2 gpu-scree

bind = SUPER, minus, execr, ~/starboard.sh

