# set-option [-aFgopqsuUw] [-t target-pane] option value
#     (alias: set)
# Set a pane option with -p, a window option with -w, a server option with -s, otherwise a
# session  option.  If the option is not a user option, -w or -s may be unnecessary - tmux
# will infer the type from the option name, assuming -w for pane options.  If -g is given,
# the global session or window option is set.
#
# -F expands formats in the option value.  The -u flag unsets an option, so a session  in‐
# herits  the  option from the global options (or with -g, restores a global option to the
# default).  -U unsets an option (like -u) but if the option is a pane option also  unsets
# the option on any panes in the window.  value depends on the option and may be a number,
# a string, or a flag (on, off, or omitted to toggle).
#
# The  -o  flag  prevents setting an option that is already set and the -q flag suppresses
# errors about unknown or ambiguous options.
#
# With -a, and if the option expects a string or a style, value is appended to the  exist‐
# ing setting.


# ========== General options ==========
# Neovim told me to set these parameters
set-option -sg escape-time 10
set-option -g focus-events on
# Tell tmux that foot support true color
set -sa terminal-features 'foot*:sixel:sync:RGB:256:hyperlinks:usstyle'
# Limit scrollback buffer to 10k lines
set -g history-limit 10000
# needed for large sixels
set -gq input-buffer-size 10485760
# Automatically renumber windows when a window is closed
set -g renumber-windows on
set -g display-panes-time 60000
# Envvars
set-environment -g BASH_ENV ~/.config/bash/non-interactive.sh
# Update envvars so hyprctl works
set -ga update-environment DISPLAY
set -ga update-environment HYPRLAND_INSTANCE_SIGNATURE
set -ga update-environment HYPRLAND_CMD
set -ga update-environment WAYLAND_DISPLAY
set -ga update-environment SWAYSOCK
set -ga update-environment I3SOCK
# source a host-specific theme file under ~/.config/tmux/themes
source-file -F "~/.config/tmux/themes/#{host}.conf"
# ========== General options ==========


# ========== Keybinds ==========
# Enable mouse
set -g mouse on

# Prefix is Ctrl-a
set -g prefix C-a
bind C-a send-prefix
unbind C-b

# Vim-like keybinds
set -g mode-keys vi
set -g status-keys vi

# reload config on r
bind r source-file "~/.config/tmux/tmux.conf"

# Split pane into two
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Moving between windows with j and k
# If a window to the right of the current window exists, switch to it, otherwise create a new one
bind -r C-k if-shell -F '#{==:#{active_window_index},#{last_window_index}}' 'new-window' 'select-window -n'
# If the current window is the leftmost window, do nothing
bind -r C-j if-shell -F '#{>:#{window_index},0}' 'select-window -p'

# resize panes with vim movement keys
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# see my .zshrc for explanation
bind -T copy-mode-vi '}' {
    send -X clear-selection
    send -X search-forward-text 'ꙋ'
    send -X cursor-right
    send -X cursor-right
    send -X cursor-right
    send -X begin-selection
    send -X end-of-line
}
bind -T copy-mode-vi '{' {
    send -X clear-selection
    send -X start-of-line
    send -X cursor-left
    send -X search-backward-text 'ꙋ'
    send -X cursor-right
    send -X cursor-right
    send -X cursor-right
    send -X begin-selection
    send -X end-of-line
}

# fist Escape cancels selection, second exits copy mode
bind -T copy-mode-vi 'Escape' {
    if-shell -F '#{selection_active}' 'send -X clear-selection' 'send -X cancel'
}

# swap marked pane with active one with prefix+s
bind s {
    swap-pane -d
    select-pane -M
}

bind C-o run-shell 'xdg-open "#{copy_cursor_hyperlink}" 2>&1 1>/dev/null'
bind C-y if-shell \
    '[ -n "#{copy_cursor_hyperlink}" ] && hyprctl dispatch exec -- wl-copy "#{copy_cursor_hyperlink}" 2>&1 1>/dev/null' \
    'display-message "copied #{copy_cursor_hyperlink}"'
# ========== Keybinds ==========


# ========== Clipboard integration ==========
# Copy and paste
bind Escape copy-mode
# p pastes text from wayland clipboard
# If WAYLAND_DISPLAY is unset then wl-paste fails and tmux uses its own buffer
bind p run-shell 'tmux set-buffer -- "$(wl-paste -t "text/plain;charset=utf-8")"; tmux paste-buffer'
# y copies selection to wayland clipboard
# If WAYLAND_DISPLAY is unset it will use tmux native buffer
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-pipe 'wl-copy'
# Disable built-in clipboard integration to prevent conflicts
set -s set-clipboard off
# ========== Clipboard integration ==========

